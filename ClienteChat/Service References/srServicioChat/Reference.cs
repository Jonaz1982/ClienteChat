//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteChat.srServicioChat {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Cliente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] BanderaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsuarioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Bandera {
            get {
                return this.BanderaField;
            }
            set {
                if ((object.ReferenceEquals(this.BanderaField, value) != true)) {
                    this.BanderaField = value;
                    this.RaisePropertyChanged("Bandera");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Foto {
            get {
                return this.FotoField;
            }
            set {
                if ((object.ReferenceEquals(this.FotoField, value) != true)) {
                    this.FotoField = value;
                    this.RaisePropertyChanged("Foto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pais {
            get {
                return this.PaisField;
            }
            set {
                if ((object.ReferenceEquals(this.PaisField, value) != true)) {
                    this.PaisField = value;
                    this.RaisePropertyChanged("Pais");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usuario {
            get {
                return this.UsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.UsuarioField, value) != true)) {
                    this.UsuarioField = value;
                    this.RaisePropertyChanged("Usuario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mensaje", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Mensaje : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContenidoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] EmoticonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnviadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImagenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemitenteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contenido {
            get {
                return this.ContenidoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContenidoField, value) != true)) {
                    this.ContenidoField = value;
                    this.RaisePropertyChanged("Contenido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Emoticon {
            get {
                return this.EmoticonField;
            }
            set {
                if ((object.ReferenceEquals(this.EmoticonField, value) != true)) {
                    this.EmoticonField = value;
                    this.RaisePropertyChanged("Emoticon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Enviado {
            get {
                return this.EnviadoField;
            }
            set {
                if ((object.ReferenceEquals(this.EnviadoField, value) != true)) {
                    this.EnviadoField = value;
                    this.RaisePropertyChanged("Enviado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fecha {
            get {
                return this.FechaField;
            }
            set {
                if ((this.FechaField.Equals(value) != true)) {
                    this.FechaField = value;
                    this.RaisePropertyChanged("Fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Imagen {
            get {
                return this.ImagenField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagenField, value) != true)) {
                    this.ImagenField = value;
                    this.RaisePropertyChanged("Imagen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remitente {
            get {
                return this.RemitenteField;
            }
            set {
                if ((object.ReferenceEquals(this.RemitenteField, value) != true)) {
                    this.RemitenteField = value;
                    this.RaisePropertyChanged("Remitente");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileMessage", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class FileMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContenidoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DatosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreArchivoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemitenteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contenido {
            get {
                return this.ContenidoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContenidoField, value) != true)) {
                    this.ContenidoField = value;
                    this.RaisePropertyChanged("Contenido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Datos {
            get {
                return this.DatosField;
            }
            set {
                if ((object.ReferenceEquals(this.DatosField, value) != true)) {
                    this.DatosField = value;
                    this.RaisePropertyChanged("Datos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fecha {
            get {
                return this.FechaField;
            }
            set {
                if ((this.FechaField.Equals(value) != true)) {
                    this.FechaField = value;
                    this.RaisePropertyChanged("Fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreArchivo {
            get {
                return this.NombreArchivoField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreArchivoField, value) != true)) {
                    this.NombreArchivoField = value;
                    this.RaisePropertyChanged("NombreArchivo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remitente {
            get {
                return this.RemitenteField;
            }
            set {
                if ((object.ReferenceEquals(this.RemitenteField, value) != true)) {
                    this.RemitenteField = value;
                    this.RaisePropertyChanged("Remitente");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="srServicioChat.IChat", CallbackContract=typeof(ClienteChat.srServicioChat.IChatCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IChat {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/Conectar", ReplyAction="http://tempuri.org/IChat/ConectarResponse")]
        bool Conectar(ClienteChat.srServicioChat.Cliente c);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChat/Conectar", ReplyAction="http://tempuri.org/IChat/ConectarResponse")]
        System.IAsyncResult BeginConectar(ClienteChat.srServicioChat.Cliente c, System.AsyncCallback callback, object asyncState);
        
        bool EndConectar(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/Enviar")]
        void Enviar(ClienteChat.srServicioChat.Mensaje m);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/Enviar")]
        System.IAsyncResult BeginEnviar(ClienteChat.srServicioChat.Mensaje m, System.AsyncCallback callback, object asyncState);
        
        void EndEnviar(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/EstaEscribiendo")]
        void EstaEscribiendo(ClienteChat.srServicioChat.Cliente c);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/EstaEscribiendo")]
        System.IAsyncResult BeginEstaEscribiendo(ClienteChat.srServicioChat.Cliente c, System.AsyncCallback callback, object asyncState);
        
        void EndEstaEscribiendo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/EnviarArchivo")]
        void EnviarArchivo(ClienteChat.srServicioChat.FileMessage fMgs);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/EnviarArchivo")]
        System.IAsyncResult BeginEnviarArchivo(ClienteChat.srServicioChat.FileMessage fMgs, System.AsyncCallback callback, object asyncState);
        
        void EndEnviarArchivo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, Action="http://tempuri.org/IChat/Desconectar")]
        void Desconectar(ClienteChat.srServicioChat.Cliente c);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, AsyncPattern=true, Action="http://tempuri.org/IChat/Desconectar")]
        System.IAsyncResult BeginDesconectar(ClienteChat.srServicioChat.Cliente c, System.AsyncCallback callback, object asyncState);
        
        void EndDesconectar(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/RefrescarClientes")]
        void RefrescarClientes(System.Collections.Generic.List<ClienteChat.srServicioChat.Cliente> Clientes);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/RefrescarClientes")]
        System.IAsyncResult BeginRefrescarClientes(System.Collections.Generic.List<ClienteChat.srServicioChat.Cliente> Clientes, System.AsyncCallback callback, object asyncState);
        
        void EndRefrescarClientes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/Recibir")]
        void Recibir(ClienteChat.srServicioChat.Mensaje m);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/Recibir")]
        System.IAsyncResult BeginRecibir(ClienteChat.srServicioChat.Mensaje m, System.AsyncCallback callback, object asyncState);
        
        void EndRecibir(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/EstaEscribiendoRespuesta")]
        void EstaEscribiendoRespuesta(ClienteChat.srServicioChat.Cliente c);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/EstaEscribiendoRespuesta")]
        System.IAsyncResult BeginEstaEscribiendoRespuesta(ClienteChat.srServicioChat.Cliente c, System.AsyncCallback callback, object asyncState);
        
        void EndEstaEscribiendoRespuesta(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/Respuesta")]
        void Respuesta(ClienteChat.srServicioChat.Mensaje msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/Respuesta")]
        System.IAsyncResult BeginRespuesta(ClienteChat.srServicioChat.Mensaje msg, System.AsyncCallback callback, object asyncState);
        
        void EndRespuesta(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/RecibirArchivo")]
        void RecibirArchivo(ClienteChat.srServicioChat.FileMessage fMsg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/RecibirArchivo")]
        System.IAsyncResult BeginRecibirArchivo(ClienteChat.srServicioChat.FileMessage fMsg, System.AsyncCallback callback, object asyncState);
        
        void EndRecibirArchivo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/Unirse")]
        void Unirse(ClienteChat.srServicioChat.Cliente c);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/Unirse")]
        System.IAsyncResult BeginUnirse(ClienteChat.srServicioChat.Cliente c, System.AsyncCallback callback, object asyncState);
        
        void EndUnirse(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/Dejar")]
        void Dejar(ClienteChat.srServicioChat.Cliente c);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/Dejar")]
        System.IAsyncResult BeginDejar(ClienteChat.srServicioChat.Cliente c, System.AsyncCallback callback, object asyncState);
        
        void EndDejar(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatChannel : ClienteChat.srServicioChat.IChat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConectarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConectarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatClient : System.ServiceModel.DuplexClientBase<ClienteChat.srServicioChat.IChat>, ClienteChat.srServicioChat.IChat {
        
        private BeginOperationDelegate onBeginConectarDelegate;
        
        private EndOperationDelegate onEndConectarDelegate;
        
        private System.Threading.SendOrPostCallback onConectarCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnviarDelegate;
        
        private EndOperationDelegate onEndEnviarDelegate;
        
        private System.Threading.SendOrPostCallback onEnviarCompletedDelegate;
        
        private BeginOperationDelegate onBeginEstaEscribiendoDelegate;
        
        private EndOperationDelegate onEndEstaEscribiendoDelegate;
        
        private System.Threading.SendOrPostCallback onEstaEscribiendoCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnviarArchivoDelegate;
        
        private EndOperationDelegate onEndEnviarArchivoDelegate;
        
        private System.Threading.SendOrPostCallback onEnviarArchivoCompletedDelegate;
        
        private BeginOperationDelegate onBeginDesconectarDelegate;
        
        private EndOperationDelegate onEndDesconectarDelegate;
        
        private System.Threading.SendOrPostCallback onDesconectarCompletedDelegate;
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public event System.EventHandler<ConectarCompletedEventArgs> ConectarCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EnviarCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EstaEscribiendoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EnviarArchivoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DesconectarCompleted;
        
        public bool Conectar(ClienteChat.srServicioChat.Cliente c) {
            return base.Channel.Conectar(c);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConectar(ClienteChat.srServicioChat.Cliente c, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConectar(c, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndConectar(System.IAsyncResult result) {
            return base.Channel.EndConectar(result);
        }
        
        private System.IAsyncResult OnBeginConectar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ClienteChat.srServicioChat.Cliente c = ((ClienteChat.srServicioChat.Cliente)(inValues[0]));
            return this.BeginConectar(c, callback, asyncState);
        }
        
        private object[] OnEndConectar(System.IAsyncResult result) {
            bool retVal = this.EndConectar(result);
            return new object[] {
                    retVal};
        }
        
        private void OnConectarCompleted(object state) {
            if ((this.ConectarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConectarCompleted(this, new ConectarCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConectarAsync(ClienteChat.srServicioChat.Cliente c) {
            this.ConectarAsync(c, null);
        }
        
        public void ConectarAsync(ClienteChat.srServicioChat.Cliente c, object userState) {
            if ((this.onBeginConectarDelegate == null)) {
                this.onBeginConectarDelegate = new BeginOperationDelegate(this.OnBeginConectar);
            }
            if ((this.onEndConectarDelegate == null)) {
                this.onEndConectarDelegate = new EndOperationDelegate(this.OnEndConectar);
            }
            if ((this.onConectarCompletedDelegate == null)) {
                this.onConectarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConectarCompleted);
            }
            base.InvokeAsync(this.onBeginConectarDelegate, new object[] {
                        c}, this.onEndConectarDelegate, this.onConectarCompletedDelegate, userState);
        }
        
        public void Enviar(ClienteChat.srServicioChat.Mensaje m) {
            base.Channel.Enviar(m);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEnviar(ClienteChat.srServicioChat.Mensaje m, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnviar(m, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndEnviar(System.IAsyncResult result) {
            base.Channel.EndEnviar(result);
        }
        
        private System.IAsyncResult OnBeginEnviar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ClienteChat.srServicioChat.Mensaje m = ((ClienteChat.srServicioChat.Mensaje)(inValues[0]));
            return this.BeginEnviar(m, callback, asyncState);
        }
        
        private object[] OnEndEnviar(System.IAsyncResult result) {
            this.EndEnviar(result);
            return null;
        }
        
        private void OnEnviarCompleted(object state) {
            if ((this.EnviarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnviarCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnviarAsync(ClienteChat.srServicioChat.Mensaje m) {
            this.EnviarAsync(m, null);
        }
        
        public void EnviarAsync(ClienteChat.srServicioChat.Mensaje m, object userState) {
            if ((this.onBeginEnviarDelegate == null)) {
                this.onBeginEnviarDelegate = new BeginOperationDelegate(this.OnBeginEnviar);
            }
            if ((this.onEndEnviarDelegate == null)) {
                this.onEndEnviarDelegate = new EndOperationDelegate(this.OnEndEnviar);
            }
            if ((this.onEnviarCompletedDelegate == null)) {
                this.onEnviarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnviarCompleted);
            }
            base.InvokeAsync(this.onBeginEnviarDelegate, new object[] {
                        m}, this.onEndEnviarDelegate, this.onEnviarCompletedDelegate, userState);
        }
        
        public void EstaEscribiendo(ClienteChat.srServicioChat.Cliente c) {
            base.Channel.EstaEscribiendo(c);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEstaEscribiendo(ClienteChat.srServicioChat.Cliente c, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEstaEscribiendo(c, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndEstaEscribiendo(System.IAsyncResult result) {
            base.Channel.EndEstaEscribiendo(result);
        }
        
        private System.IAsyncResult OnBeginEstaEscribiendo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ClienteChat.srServicioChat.Cliente c = ((ClienteChat.srServicioChat.Cliente)(inValues[0]));
            return this.BeginEstaEscribiendo(c, callback, asyncState);
        }
        
        private object[] OnEndEstaEscribiendo(System.IAsyncResult result) {
            this.EndEstaEscribiendo(result);
            return null;
        }
        
        private void OnEstaEscribiendoCompleted(object state) {
            if ((this.EstaEscribiendoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EstaEscribiendoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EstaEscribiendoAsync(ClienteChat.srServicioChat.Cliente c) {
            this.EstaEscribiendoAsync(c, null);
        }
        
        public void EstaEscribiendoAsync(ClienteChat.srServicioChat.Cliente c, object userState) {
            if ((this.onBeginEstaEscribiendoDelegate == null)) {
                this.onBeginEstaEscribiendoDelegate = new BeginOperationDelegate(this.OnBeginEstaEscribiendo);
            }
            if ((this.onEndEstaEscribiendoDelegate == null)) {
                this.onEndEstaEscribiendoDelegate = new EndOperationDelegate(this.OnEndEstaEscribiendo);
            }
            if ((this.onEstaEscribiendoCompletedDelegate == null)) {
                this.onEstaEscribiendoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEstaEscribiendoCompleted);
            }
            base.InvokeAsync(this.onBeginEstaEscribiendoDelegate, new object[] {
                        c}, this.onEndEstaEscribiendoDelegate, this.onEstaEscribiendoCompletedDelegate, userState);
        }
        
        public void EnviarArchivo(ClienteChat.srServicioChat.FileMessage fMgs) {
            base.Channel.EnviarArchivo(fMgs);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEnviarArchivo(ClienteChat.srServicioChat.FileMessage fMgs, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnviarArchivo(fMgs, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndEnviarArchivo(System.IAsyncResult result) {
            base.Channel.EndEnviarArchivo(result);
        }
        
        private System.IAsyncResult OnBeginEnviarArchivo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ClienteChat.srServicioChat.FileMessage fMgs = ((ClienteChat.srServicioChat.FileMessage)(inValues[0]));
            return this.BeginEnviarArchivo(fMgs, callback, asyncState);
        }
        
        private object[] OnEndEnviarArchivo(System.IAsyncResult result) {
            this.EndEnviarArchivo(result);
            return null;
        }
        
        private void OnEnviarArchivoCompleted(object state) {
            if ((this.EnviarArchivoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnviarArchivoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnviarArchivoAsync(ClienteChat.srServicioChat.FileMessage fMgs) {
            this.EnviarArchivoAsync(fMgs, null);
        }
        
        public void EnviarArchivoAsync(ClienteChat.srServicioChat.FileMessage fMgs, object userState) {
            if ((this.onBeginEnviarArchivoDelegate == null)) {
                this.onBeginEnviarArchivoDelegate = new BeginOperationDelegate(this.OnBeginEnviarArchivo);
            }
            if ((this.onEndEnviarArchivoDelegate == null)) {
                this.onEndEnviarArchivoDelegate = new EndOperationDelegate(this.OnEndEnviarArchivo);
            }
            if ((this.onEnviarArchivoCompletedDelegate == null)) {
                this.onEnviarArchivoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnviarArchivoCompleted);
            }
            base.InvokeAsync(this.onBeginEnviarArchivoDelegate, new object[] {
                        fMgs}, this.onEndEnviarArchivoDelegate, this.onEnviarArchivoCompletedDelegate, userState);
        }
        
        public void Desconectar(ClienteChat.srServicioChat.Cliente c) {
            base.Channel.Desconectar(c);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDesconectar(ClienteChat.srServicioChat.Cliente c, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDesconectar(c, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDesconectar(System.IAsyncResult result) {
            base.Channel.EndDesconectar(result);
        }
        
        private System.IAsyncResult OnBeginDesconectar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ClienteChat.srServicioChat.Cliente c = ((ClienteChat.srServicioChat.Cliente)(inValues[0]));
            return this.BeginDesconectar(c, callback, asyncState);
        }
        
        private object[] OnEndDesconectar(System.IAsyncResult result) {
            this.EndDesconectar(result);
            return null;
        }
        
        private void OnDesconectarCompleted(object state) {
            if ((this.DesconectarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DesconectarCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DesconectarAsync(ClienteChat.srServicioChat.Cliente c) {
            this.DesconectarAsync(c, null);
        }
        
        public void DesconectarAsync(ClienteChat.srServicioChat.Cliente c, object userState) {
            if ((this.onBeginDesconectarDelegate == null)) {
                this.onBeginDesconectarDelegate = new BeginOperationDelegate(this.OnBeginDesconectar);
            }
            if ((this.onEndDesconectarDelegate == null)) {
                this.onEndDesconectarDelegate = new EndOperationDelegate(this.OnEndDesconectar);
            }
            if ((this.onDesconectarCompletedDelegate == null)) {
                this.onDesconectarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDesconectarCompleted);
            }
            base.InvokeAsync(this.onBeginDesconectarDelegate, new object[] {
                        c}, this.onEndDesconectarDelegate, this.onDesconectarCompletedDelegate, userState);
        }
    }
}
